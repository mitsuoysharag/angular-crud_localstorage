{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/navigation/navigation.component.css","webpack:///./src/app/components/navigation/navigation.component.html","webpack:///./src/app/components/navigation/navigation.component.ts","webpack:///./src/app/components/task-form/task-form.component.css","webpack:///./src/app/components/task-form/task-form.component.html","webpack:///./src/app/components/task-form/task-form.component.ts","webpack:///./src/app/components/task-list/task-list.component.css","webpack:///./src/app/components/task-list/task-list.component.html","webpack:///./src/app/components/task-list/task-list.component.ts","webpack:///./src/app/components/task/task.component.css","webpack:///./src/app/components/task/task.component.html","webpack:///./src/app/components/task/task.component.ts","webpack:///./src/app/services/task.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-navigation></app-navigation>\\n\\n<div class=\\\"container p-4\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-5 text-center\\\">\\n        <app-task-form></app-task-form>\\n    </div>\\n    <div class=\\\"col-md-7\\\">\\n        <app-task-list></app-task-list>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { NavigationComponent } from './components/navigation/navigation.component';\nimport { TaskFormComponent } from './components/task-form/task-form.component';\nimport { TaskComponent } from './components/task/task.component';\nimport { TaskListComponent } from './components/task-list/task-list.component';\n\nimport { TaskService } from './services/task.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavigationComponent,\n    TaskFormComponent,\n    TaskComponent,\n    TaskListComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [\n    TaskService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-dark bg-dark\\\">\\n  <div class=\\\"container\\\">\\n    <a href=\\\"/\\\" class=\\\"navbar-brand\\\">\\n      <img height=\\\"40px\\\" src=\\\"https://cdn.freebiesupply.com/logos/large/2x/angular-icon-logo-png-transparent.png\\\" alt=\\\"\\\">\\n       Task App\\n    </a>\\n  </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <form (submit)=\\\"addTask(newTitle, newDescription)\\\">\\n      <div class=\\\"form-group\\\">\\n        <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Task Title\\\" #newTitle>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <textarea class=\\\"form-control\\\" placeholder=\\\"Task Description\\\" cols=\\\"30\\\" rows=\\\"10\\\" #newDescription></textarea>\\n      </div>\\n      <button class=\\\"btn btn-primary btn-block\\\">\\n        Send\\n      </button>\\n    </form>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { TaskService } from '../../services/task.service';\n\n@Component({\n  selector: 'app-task-form',\n  templateUrl: './task-form.component.html',\n  styleUrls: ['./task-form.component.css']\n})\nexport class TaskFormComponent implements OnInit {\n\n  constructor(public taskService: TaskService) { }\n\n  ngOnInit() {\n  }\n\n  addTask(newTitle: HTMLInputElement, newDescription: HTMLInputElement) {\n    this.taskService.addTask({\n      title: newTitle.value,\n      description: newDescription.value\n    });\n    newTitle.value = \"\";\n    newDescription.value = \"\";\n    newTitle.focus();\n    return false;\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<app-task *ngFor=\\\"let task of tasks\\\" [task]=\\\"task\\\"></app-task>\"","import { Component, OnInit } from '@angular/core';\n\nimport { TaskService } from '../../services/task.service';\n\nimport { Task } from '../../models/task';\n\n@Component({\n  selector: 'app-task-list',\n  templateUrl: './task-list.component.html',\n  styleUrls: ['./task-list.component.css']\n})\nexport class TaskListComponent implements OnInit {\n\n  tasks: Task[];\n\n  constructor(public taskService: TaskService) { }\n\n  ngOnInit() {\n    this.tasks = this.taskService.getTasks();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"card mb-2\\\">\\n  <div class=\\\"card-header d-flex justify-content-between align-items-center\\\">\\n    {{task.title}}\\n    <div>\\n      <button class=\\\"btn btn-primary\\\" (click)=\\\"hide=!hide\\\">Show</button>\\n      <button class=\\\"btn btn-danger\\\" (click)=\\\"deleteTask(task)\\\">Delete</button>\\n    </div>\\n  </div>\\n  <div class=\\\"card-body\\\" [hidden]=\\\"hide\\\">\\n    {{task.description}}\\n  </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\n\nimport { TaskService } from '../../services/task.service';\n\nimport { Task } from '../../models/task';\n\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.css']\n})\nexport class TaskComponent implements OnInit {\n\n  @Input() task: Task;\n  hide: boolean;\n\n  constructor(public taskService: TaskService) {\n    this.hide = true;\n  }\n\n  ngOnInit() {\n  }\n\n  deleteTask(task: Task) {\n    if (confirm('Are you sure you want to delete it?')) {\n      this.taskService.deleteTask(task);\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Task } from '../models/task';\nimport { Title } from '../../../node_modules/@angular/platform-browser';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n\n  tasks: Task[];\n\n  constructor() {\n    this.tasks = [];\n  }\n\n  getTasks() {\n    let tasks_local = localStorage.getItem('tasks');\n    if (tasks_local !== null) {\n      this.tasks = JSON.parse(tasks_local);\n    }\n    return this.tasks;\n  }\n\n  addTask(task: Task) {\n    this.tasks.push(task);\n    localStorage.setItem('tasks', JSON.stringify(this.tasks));\n  }\n\n  deleteTask(task: Task) {\n    for (let i = 0; i < this.tasks.length; i++) {\n      if (task == this.tasks[i]) {\n        this.tasks.splice(i,1);\n        localStorage.setItem('tasks', JSON.stringify(this.tasks));\n        break;\n      }\n    }\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}